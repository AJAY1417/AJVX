<%- include('../layouts/user/header.ejs') %>

    <main class="main">
        <!-- Page Header -->
        <div class="page-header text-center" style="background-image: url('userAssets/images/page-header-bg.jpg')">
            <div class="container">
                <h1 class="page-title">My Account<span>Shop</span></h1>
            </div><!-- End .container -->
        </div><!-- End .page-header -->

        <!-- Breadcrumb Navigation -->
        <nav aria-label="breadcrumb" class="breadcrumb-nav mb-3">
            <div class="container">
                <ol class="breadcrumb">
                    <li class="breadcrumb-item"><a href="/">Home</a></li>
                    <li class="breadcrumb-item active" aria-current="page">My Account</li>
                </ol>
            </div><!-- End .container -->
        </nav><!-- End .breadcrumb-nav -->

        <!-- Page Content -->
        <div class="page-content">
            <!-- Dashboard Section -->
            <div class="dashboard">
                <div class="container">
                    <div class="row">
                        <!-- Sidebar Navigation -->
                        <aside class="col-md-4 col-lg-3">
                            <ul class="nav nav-dashboard flex-column mb-3 mb-md-0" role="tablist">
                                <!-- Dashboard Tab -->
                                <li class="nav-item">
                                    <a class="nav-link" id="tab-dashboard-link" data-toggle="tab" href="#tab-dashboard"
                                        role="tab" aria-controls="tab-dashboard" aria-selected="false">Dashboard</a>
                                </li>
                                <!-- Orders Tab -->
                                <li class="nav-item">
                                    <a id="tab-orders-link" class="nav-link" data-toggle="tab" href="#tab-orders"
                                        role="tab" aria-controls="tab-orders" aria-selected="false">Orders</a>
                                </li>



                                <!-- Wallet Tab -->
                                <li class="nav-item">
                                    <a class="nav-link" href="/view-wallet">Wallet</a>
                                </li>

                                <!-- Address Tab -->
                                <li class="nav-item">
                                    <a class="nav-link active" id="tab-address-link" data-toggle="tab"
                                        href="#tab-address" role="tab" aria-controls="tab-address"
                                        aria-selected="true">Address</a>
                                </li>

                                <!-- Reset Password Tab -->
                                <li class="nav-item">
                                    <a class="nav-link" id="tab-reset-password-link" data-toggle="tab"
                                        href="#tab-reset-password" role="tab" aria-controls="tab-reset-password"
                                        aria-selected="false">Reset Password</a>
                                </li>


                                <!-- Sign Out Tab -->
                                <li class="nav-item">
                                    <a class="nav-link" href="/logout">Sign Out</a>
                                </li>
                            </ul>
                        </aside><!-- End .col-lg-3 -->

                        <!----------------------------------------------------------- DASHBOARD STARTS ----------------------------------------------------------->

                        <!-- Dashboard Content -->
                        <div class="col-md-8 col-lg-9">
                            <div class="tab-content">
                                <!-- Dashboard Tab Pane -->
                                <div class="tab-pane fade show active" id="tab-dashboard" role="tabpanel"
                                    aria-labelledby="tab-dashboard-link">
                                    <form method="post" action="/updateDetails" id="accountForm">
                                        <h3>Account Info</h3>
                                        <div class="text-right">
                                            <!-- Edit Button -->
                                            <button type="button" class="btn btn-link" id="editIcon"
                                                style="color: red;">
                                                <i class="fas fa-edit"></i> Edit
                                            </button>
                                        </div>
                                        <div class="form-group">
                                            <!-- First Name Input -->
                                            <label for="name">First Name:</label>
                                            <input type="text" class="form-control" id="name" name="firstName"
                                                value="<%= User.firstName %>" disabled>
                                        </div>
                                        <div class="form-group">
                                            <!-- Last Name Input -->
                                            <label for="name">Last Name:</label>
                                            <input type="text" class="form-control" id="name" name="lastName"
                                                value="<%= User.lastName %>" disabled>
                                        </div>
                                        <div class="form-group">
                                            <!-- Mobile Input -->
                                            <label for="mobile">Mobile:</label>
                                            <input type="tel" class="form-control" id="mobile" name="mobile"
                                                value="<%= User.mobile %>" disabled>
                                        </div>



                                        <button type="submit" class="btn btn-primary">Submit Changes</button>
                                    </form>

                                    <div class="form-group text-center">
                                        <h4>Your Referral Code</h4>
                                        <p style="font-size: 24px;">
                                            <%= User.referralCode %>
                                        </p>
                                    </div>

                                </div><!-- .End .tab-pane -->
                                <!----------------------------------------------------------- DASHBOARD ENDS ----------------------------------------------------------->

                                <!----------------------------------------------------------- ORDERS STARTS ----------------------------------------------------------->
                                <div class="tab-pane fade" id="tab-orders" role="tabpanel"
                                    aria-labelledby="tab-orders-link">
                                    <!-- Orders Table -->
                                    <table class="table table-cart table-mobile">
                                        <thead>
                                            <tr>
                                                <th style="width: 40%;">Product</th>
                                                <th style="width: 15%;">Price</th>
                                                <th style="width: 20%;">Order Status</th>
                                                <th style="width: 25%;">Actions</th>
                                            </tr>
                                        </thead>
                                        <tbody>
                                            <!-- Loop through order data -->
                                            <% for (let j=0; j < orderData.length; j++) { %>
                                                <% let product=orderData[j].products %>
                                                    <% for (let i=0; i < product.length; i++) { %>
                                                        <% const value=product[i].product; %>
                                                            <!-- Individual Order Row -->
                                                            <tr>
                                                                <!-- Product Column -->
                                                                <td class="product-col">
                                                                    <div class="product">
                                                                        <figure class="product-media">
                                                                            <a href="#">
                                                                                <img src="/public/images/products/<%= value.images[0] %>"
                                                                                    alt="Product image">
                                                                            </a>
                                                                        </figure>
                                                                        <h3 class="product-title">
                                                                            <a href="#">
                                                                                <%= value.name %>
                                                                            </a>
                                                                        </h3>
                                                                    </div>
                                                                </td>

                                                                <!-- Price Column -->
                                                                <td class="price-col">₹<%= product[i].total %>
                                                                </td>

                                                                <!-- Order Status Column -->
                                                                <td class="status-col">
                                                                    <%= orderData[j].status %>
                                                                </td>

                                                                <!-- Actions Column -->
                                                                <style>
                                                                    .btn {
                                                                        margin-right: 3px;
                                                                    }
                                                                </style>

                                                                <td class="actions-col">
                                                                    <div class="d-flex justify-content-start">
                                                                        <% if (orderData[j].status==='Delivered' ) { %>
                                                                            <!-- Return Order Button -->
                                                                            <a href="#"
                                                                                class="btn btn-outline-primary-2 btn-sm return-button"
                                                                                data-order-id="<%= orderData[j]._id %>">
                                                                                RETURN
                                                                            </a>
                                                                            <% } else if
                                                                                (orderData[j].status==='Payment Failed'
                                                                                ) { %>
                                                                                <form action="/placeOrder"
                                                                                    method="POST">
                                                                                    <input type="hidden" name="orderId"
                                                                                        value="<%= orderData[j]._id %>">
                                                                                    <input type="hidden"
                                                                                        name="payment-method"
                                                                                        value="online">
                                                                                    <button type="submit"
                                                                                        class="btn btn-outline-primary-2 btn-sm repay-button">
                                                                                        REPAY
                                                                                    </button>
                                                                                </form>
                                                                                <% } else if (orderData[j].status
                                                                                    !=='cancelled' ) { %>
                                                                                    <!-- Cancel Order Button -->
                                                                                    <a href="#" data-type="order"
                                                                                        data-id="<%= orderData[j]._id %>"
                                                                                        class="btn btn-outline-primary-2 btn-sm cancel-button">CANCEL</a>
                                                                                    <% } %>
                                                                                        <!-- Generate Invoice Button -->
                                                                                        <a href="/generateInvoice/<%= orderData[j]._id %>"
                                                                                            class="btn btn-outline-primary-2 btn-sm invoice-button mr-1">
                                                                                            <i
                                                                                                class="fas fa-file-invoice"></i>
                                                                                        </a>
                                                                                        <!-- View Order Details Button -->
                                                                                        <a href="/orderDetails/<%= orderData[j]._id %>"
                                                                                            class="btn btn-outline-primary-2 btn-sm order-details-button mr-1">
                                                                                            <i
                                                                                                 class="fas fa-info-circle"></i>
                                                                                        </a>
                                                                    </div>
                                                                </td>

                                                            </tr>
                                                            <% } %>
                                                                <% } %>
                                        </tbody>
                                    </table>
                                </div><!-- .End .tab-pane -->

                                <!----------------------------------------------------------- WALLET STARTS ----------------------------------------------------------->

                                <div class="tab-pane fade" id="tab-wallet" role="tabpanel"
                                    aria-labelledby="tab-wallet-link">

                                    <h5 class="card-title">Wallet Balance :<%= User.wallet %> <span
                                                class="text-success">/-</span></h5><br>
                                    <p>Wallet History</p>

                                    <div class="card-body">



                                        <!-- Add money to the wallet form -->
                                        <div class="wallet-container">
                                            <h5>Add Money to Wallet:</h5>
                                            <form id="addMoneyForm" class="narrow-form">
                                                <div class="form-group">
                                                    <label for="addMoneyAmount">Amount:</label>
                                                    <input type="number" class="form-control" id="addMoneyAmount" />
                                                </div>
                                                <button type="button" onclick="addMoney()" id="addMoneyButton"
                                                    class="btn btn-dark">Add Money</button>

                                            </form>
                                            <input type="hidden" id="userId" value="<%= User._id %>" />

                                        </div>

                                    </div>
                                </div>


                                <!----------------------------------------------------------- WALLET ENDS ----------------------------------------------------------->
                                <!-- Downloads Tab Pane -->
                                <div class="tab-pane fade" id="tab-downloads" role="tabpanel"
                                    aria-labelledby="tab-downloads-link">
                                    <p>No downloads available yet.</p>
                                    <a href="category.html" class="btn btn-outline-primary-2"><span>GO SHOP</span><i
                                            class="icon-long-arrow-right"></i></a>
                                </div><!-- .End .tab-pane -->

                                <!----------------------------------------------------------- ADDRESS STARTS ----------------------------------------------------------->
                                <!-- Address Tab Pane -->
                                <div class="tab-pane fade" id="tab-address" role="tabpanel"
                                    aria-labelledby="tab-address-link">
                                    <p>The following addresses will be used on the checkout page by default.</p>
                                    <!-- Add Address Button -->
                                    <a href="/addAddress">
                                        <button type="submit" class="btn btn-outline-primary-2 float-right">
                                            <span>+ ADD ADDRESS</span>
                                            <i class="icon-long-arrow-right"></i>
                                        </button>
                                    </a>
                                    <div class="row">
                                        <!-- Loop through User addresses -->
                                        <% if (UserAddress && UserAddress.length> 0) { %>
                                            <% for (let i=0; i < UserAddress.length; i++) { %>
                                                <div class="col-lg-6">
                                                    <div class="card card-dashboard">
                                                        <div class="card-body">
                                                            <!-- Delete Address Button -->
                                                            <a href="/deleteAddress?id=<%= UserAddress[i]._id %>"><i
                                                                    class="bi bi-trash3 float-right"></i></a>

                                                            <!-- Billing Address Title -->
                                                            <h3 class="card-title">Billing Address</h3>
                                                            <!-- Iterate through the address array -->
                                                            <% if (UserAddress[i].address &&
                                                                UserAddress[i].address.length> 0) { %>
                                                                <% for (let j=0; j < UserAddress[i].address.length; j++)
                                                                    { %>
                                                                    <!-- Address Details -->
                                                                    <p>
                                                                        <%= UserAddress[i].address[j].firstName %><br>
                                                                            <%= UserAddress[i].address[j].lastName %>
                                                                                <br>
                                                                                <%= UserAddress[i].address[j].mobile %>
                                                                                    <br>
                                                                                    <%= UserAddress[i].address[j].email
                                                                                        %><br>
                                                                                        <%= UserAddress[i].address[j].houseNo
                                                                                            %><br>
                                                                                            <%= UserAddress[i].address[j].city
                                                                                                %><br>
                                                                                                <%= UserAddress[i].address[j].state
                                                                                                    %><br>
                                                                                                    <%= UserAddress[i].address[j].zipcode
                                                                                                        %><br>
                                                                                                        <%= UserAddress[i].address[j].additionalDetails
                                                                                                            %><br>
                                                                    </p>
                                                                    <!-- Edit Address Button -->
                                                                    <a href="/editAddress?id=<%= UserAddress[i]._id %>">Edit
                                                                        <i class="icon-edit"></i></a>
                                                                    <% } %>
                                                                        <% } else { %>
                                                                            <p>No billing address found.</p>
                                                                            <% } %>
                                                        </div>
                                                    </div>
                                                </div>
                                                <% } %>
                                                    <% } else { %>
                                                        <p>No User addresses found.</p>
                                                        <% } %>
                                    </div>
                                </div><!-- .End .tab-pane -->
                                <!----------------------------------------------------------- ADDRESS ENDS ----------------------------------------------------------->
                                <!------------------------------------- Reset Password Section ------------------------------------->
                                <div class="tab-pane fade" id="tab-reset-password" role="tabpanel"
                                    aria-labelledby="tab-reset-password-link">
                                    <div class="container">
                                        <h2 class="section-title">Reset Password</h2>
                                        <form method="post" action="/resetPassword">
                                            <!-- Current Password Input -->
                                            <div class="form-group">
                                                <label for="currentPassword">Current Password:</label>
                                                <input type="password" class="form-control" id="currentPassword"
                                                    name="currentPassword" required>
                                                <span id="currentPasswordValidationMsg" style="color: red;"></span>
                                            </div>
                                            <!-- New Password Input -->
                                            <div class="form-group">
                                                <label for="newPassword">New Password:</label>
                                                <input type="password" class="form-control" id="newPassword"
                                                    name="newPassword" required maxlength="12">
                                                <span id="passwordValidationMsg" style="color: red;"></span>
                                            </div>
                                            <!-- Confirm Password Input -->
                                            <div class="form-group">
                                                <label for="confirmPassword">Confirm Password:</label>
                                                <input type="password" class="form-control" id="confirmPassword"
                                                    name="confirmPassword" required maxlength="12">
                                                <span id="confirmPasswordValidationMsg" style="color: red;"></span>
                                            </div>
                                            <!-- Submit Button -->
                                            <button type="submit" class="btn btn-primary">Reset Password</button>
                                        </form>
                                    </div>
                                </div>


                            </div><!-- End .col-lg-9 -->
                        </div><!-- End .row -->
                    </div><!-- End .container -->
                </div><!-- End .dashboard -->
            </div><!-- End .page-content -->
    </main><!-- End .main -->

    <!-- JavaScript Libraries -->
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@10"></script>
    <script src="https://code.jquery.com/jquery-3.3.1.slim.min.js"></script>
    <script src="https://stackpath.bootstrapcdn.com/bootstrap/4.3.1/js/bootstrap.min.js"></script>
    <script src="https://checkout.razorpay.com/v1/checkout.js"></script>

    <!-- Custom Scripts -->
    <script>

        function addMoney() {
            var number = document.getElementById('amount').value
            var amount = parseInt(number)
            addMoneyProcess(amount);
        }


        document.addEventListener('DOMContentLoaded', function () {
            document.getElementById('editIcon').addEventListener('click', function () {
                toggleFormVisibility();
            });

            function toggleFormVisibility() {
                var form = document.getElementById('accountForm').elements;

                for (var i = 0; i < form.length; i++) {
                    if (form[i].type !== 'button' && form[i].type !== 'submit') {
                        form[i].disabled = !form[i].disabled;
                    }
                }

                // Toggle the display style of password fields
                var passwordGroup = document.getElementById('passwordGroup');
                passwordGroup.style.display = passwordGroup.style.display === 'none' ? 'block' : 'none';

                var confirmPasswordGroup = document.getElementById('confirmPasswordGroup');
                confirmPasswordGroup.style.display = confirmPasswordGroup.style.display === 'none' ? 'block' : 'none';
            }
        });



        // Add a click event listener to the "Return Order" button
        $('.return-button').click(function (event) {
            event.preventDefault(); // Prevent the default link behavior

            var orderId = $(this).data('order-id'); // Get the order ID from the button's data attribute

            // Send an AJAX POST request to the backend
            $.ajax({
                url: '/returnOrder',
                type: 'POST',
                dataType: 'json',
                data: {
                    type: 'order',
                    id: orderId
                },
                success: function (response) {
                    // Handle success response
                    if (response.success) {
                        // Display a success message using Swal
                        Swal.fire({
                            icon: 'success',
                            title: 'Order Returned Successfully!',
                            showConfirmButton: false,
                            timer: 1500
                        }).then(function () {
                            // Optionally, you can reload the page or perform other actions
                            location.reload(); // Reload the page
                        });
                    } else {
                        // Display an error message using Swal
                        Swal.fire({
                            icon: 'error',
                            title: 'Failed to Return Order',
                            text: 'Please try again later',
                        });
                    }
                },
                error: function (xhr, status, error) {
                    // Handle error response
                    console.error('Error:', error);
                    // Display an error message using Swal
                    Swal.fire({
                        icon: 'error',
                        title: 'Error',
                        text: 'An error occurred while processing your request',
                    });
                }
            });
        });

        $(document).ready(function () {
            console.log('Cancel button clicked');
            // Handle the cancel button click event
            $('.cancel-button').click(async function () {
                const $button = $(this);

                const type = $button.data('type');
                const id = $button.data('id');

                // Display SweetAlert confirmation dialog
                const result = await Swal.fire({
                    title: 'Cancel Order',
                    html:
                        '<div>Select a reason for cancellation:<br>' +
                        '<input type="radio" id="reason1" name="cancelReason" value="OverPriced"> <label for="reason1">OverPriced</label><br>' +
                        '<input type="radio" id="reason2" name="cancelReason" value="Not Satisfied"> <label for="reason2">Not Satisfied</label><br>' +
                        '<input type="radio" id="reason3" name="cancelReason" value="Looking for a Different Product"> <label for="reason3">Looking for a Different Product</label></div>',
                    showCancelButton: true,
                    confirmButtonText: 'Proceed',
                    cancelButtonText: 'Cancel',
                    showLoaderOnConfirm: true,
                    preConfirm: async () => {
                        // Get the selected cancel reason
                        const cancelReason = $("input[name='cancelReason']:checked").val();

                        // Return an object with the cancel reason
                        return { cancelReason };
                    }
                });

                if (result.isConfirmed) {
                    try {
                        // Perform the cancel action with the selected reason
                        const response = await $.ajax({
                            type: 'POST',
                            url: '/cancelOrder',
                            data: {
                                type: type,
                                id: id,
                                reason: result.value.cancelReason
                            }
                        });

                        if (response.success) {
                            // Update the status column without reloading the page
                            const statusColumn = $button.parent().prev('.status-col');
                            statusColumn.text(type === 'order' ? 'Order Status: cancelled' : 'Product Status: cancelled');

                            // Show a success message
                            Swal.fire({
                                icon: 'success',
                                title: `${type} cancelled successfully!`,
                                showConfirmButton: false,
                                timer: 1500
                            });

                            // Hide the cancel button
                            $button.hide();
                        } else {
                            Swal.fire('Error!', `Failed to cancel ${type}.`, 'error');
                        }
                    } catch (error) {
                        console.error(error);
                        Swal.fire('Error!', 'An error occurred.', 'error');
                    }
                }
            });

            // Check cancellation status on page load
            $('.cancel-button').each(function () {
                const $button = $(this);
                const id = $button.data('id');

                // Check if cancellation has been performed for this order
                const isCancelled = localStorage.getItem(`cancelled_${id}`);
                if (isCancelled) {
                    $button.hide(); // Hide the cancel button if the order is cancelled
                }
            });
        });




        // Razorpay Integration
        document.addEventListener('DOMContentLoaded', function () {
            document.getElementById('addMoneyButton').addEventListener('click', initiateRazorpayPayment);
        });

        function getUserId() {
            // You need to implement the logic to fetch the user ID.
            // For example, if you have an input field with the user ID, you can do something like this:
            const userIdInput = document.getElementById("userId");
            return userIdInput.value;
        }

        async function initiateRazorpayPayment() {
            try {
                const addMoneyAmount = document.getElementById("addMoneyAmount").value;
                const userId = getUserId();
                console.log('User ID:', userId);
                console.log('Add Money Amount:', addMoneyAmount);
                // Fetch the Razorpay order ID from the server
                const response = await fetch(`/razorpay/create-order?amount=${addMoneyAmount}&userId=${userId}`, {
                    method: 'GET',
                    headers: {
                        'Content-Type': 'application/json',
                    },
                });

                const orderData = await response.json();

                // Check if the order is created successfully
                if (orderData && orderData.id) {
                    // Load CryptoJS if needed (you can remove this part if CryptoJS is not required)
                    await loadCryptoJS();

                    // Initialize Razorpay
                    const options = {
                        key: 'rzp_test_Rr5LK4XJjm8rxm',
                        amount: orderData.amount,
                        currency: orderData.currency,
                        order_id: orderData.id,
                        name: 'AJVX',
                        description: 'Add Money to Wallet',
                        image: 'URL_TO_YOUR_COMPANY_LOGO',
                        handler: function (response) {
                            handleRazorpaySuccess(response, addMoneyAmount, orderData);
                        },
                        prefill: {
                            name: 'User.firstName',
                            email: 'User@example.com',
                            contact: '9876543210',
                        },
                        notes: {
                            address: 'Your Company Address',
                        },
                        theme: {
                            color: '#F37254',
                        },
                    };

                    const rzp = new Razorpay(options);
                    rzp.open();
                } else {
                    console.error('Failed to create Razorpay order');
                    // Handle the error scenario
                }
            } catch (error) {
                console.error('Error initiating Razorpay payment:', error);
                // Handle the error scenario
            }
        }

        // Function to handle Razorpay success
        async function handleRazorpaySuccess(response, addMoneyAmount, orderData) {
            try {
                // Send the payment success details to the server for verification
                const userId = getUserId();
                const verifyPaymentResponse = await fetch('/razorpay/verify-payment', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                    },
                    body: JSON.stringify({
                        userId,
                        orderId: orderData.id,
                        paymentId: response.razorpay_payment_id,
                        addMoneyAmount,
                    }),
                });

                const verificationData = await verifyPaymentResponse.json();

                // Check if the payment is verified successfully
                if (verificationData && verificationData.success) {
                    // Update the wallet balance and display success message
                    const updatedBalance = verificationData.updatedBalance;
                    document.getElementById("walletBalance").innerText = updatedBalance;

                    // Add a row to the wallet history table (if needed)
                    const walletHistoryTable = document.getElementById("walletHistoryTable");
                    const newRow = walletHistoryTable.insertRow(1);
                    const dateCell = newRow.insertCell(0);
                    const amountCell = newRow.insertCell(1);
                    const messageCell = newRow.insertCell(2);
                    const typeCell = newRow.insertCell(3);

                    dateCell.innerHTML = new Date().toLocaleString();
                    amountCell.innerHTML = addMoneyAmount;
                    messageCell.innerHTML = 'Added Money to Wallet';
                    typeCell.innerHTML = 'Credit';

                    // Display a success message
                    Swal.fire('Success!', 'Money added to wallet successfully.', 'success');
                } else {
                    console.error('Failed to verify Razorpay payment');
                    // Handle the verification failure scenario
                }
            } catch (error) {
                console.error('Error handling Razorpay success:', error);
                // Handle the error scenario
            }
        }
    </script>
    <script>
        document.addEventListener('DOMContentLoaded', function () {
            // Function to validate password
            function validatePassword(password) {
                // Password length should be at least 8 characters and not more than 12 characters
                if (password.length === 0) {
                    return "Password cannot be empty.";
                }
                if (password.length < 8 || password.length > 12) {
                    return "Password must be between 8 and 12 characters long.";
                }
                // Check for spaces in password
                if (/\s/.test(password)) {
                    return "Password cannot contain spaces.";
                }
                // Check for special characters
                if (/[\s\/\.]/.test(password)) {
                    return "Password cannot contain special characters like '.', '/', or space.";
                }

                return ""; // Return empty string if password is valid
            }

            // Function to validate confirm password
            function validateConfirmPassword(confirmPassword, password) {
                if (confirmPassword !== password) {
                    return "Passwords do not match.";
                }
                return ""; // Return empty string if confirm password matches password
            }

            // Event listener for password input
            var passwordInput = document.getElementById('newPassword');
            var passwordValidationMsg = document.getElementById('passwordValidationMsg');

            passwordInput.addEventListener('input', function () {
                var password = this.value;
                var validationMessage = validatePassword(password);
                passwordValidationMsg.textContent = validationMessage;
                if (validationMessage === "") {
                    passwordInput.classList.remove("invalid");
                    passwordInput.classList.add("valid");
                } else {
                    passwordInput.classList.remove("valid");
                    passwordInput.classList.add("invalid");
                }
            });

            // Event listener for confirm password input
            var confirmPasswordInput = document.getElementById('confirmPassword');
            var confirmPasswordValidationMsg = document.getElementById('confirmPasswordValidationMsg');

            confirmPasswordInput.addEventListener('input', function () {
                var confirmPassword = this.value;
                var password = document.getElementById('newPassword').value;
                var validationMessage = validateConfirmPassword(confirmPassword, password);
                confirmPasswordValidationMsg.textContent = validationMessage;
                if (validationMessage === "") {
                    confirmPasswordInput.classList.remove("invalid");
                    confirmPasswordInput.classList.add("valid");
                } else {
                    confirmPasswordInput.classList.remove("valid");
                    confirmPasswordInput.classList.add("invalid");
                }
            });

            // Event listener for current password input
            var currentPasswordInput = document.getElementById('currentPassword');
            var currentPasswordValidationMsg = document.getElementById('currentPasswordValidationMsg');

            currentPasswordInput.addEventListener('input', function () {
                var currentPassword = this.value;

                // Send an AJAX request to the server to validate the current password
                fetch('/validateCurrentPassword', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json'
                    },
                    body: JSON.stringify({ currentPassword: currentPassword })
                })
                    .then(response => {
                        if (!response.ok) {
                            throw new Error('Network response was not ok');
                        }
                        return response.json();
                    })
                    .then(data => {
                        if (data.valid) {
                            currentPasswordValidationMsg.textContent = ""; // Password is valid, clear validation message
                        } else {
                            currentPasswordValidationMsg.textContent = "Current password is incorrect."; // Password is invalid, display validation message
                        }
                    })
                    .catch(error => {
                        console.error('Error:', error);
                        currentPasswordValidationMsg.textContent = "An error occurred. Please try again.";
                    });
            });

            const resetPassword = async () => {
                try {
                    const newPassword = document.getElementById('newPassword').value;

                    const response = await fetch('/resetPassword', {
                        method: 'POST',
                        headers: {
                            'Content-Type': 'application/json'
                        },
                        body: JSON.stringify({ newPassword })
                    });

                    const data = await response.json();

                    if (response.ok && data.success) {
                        // Password reset was successful, show success Swal alert
                        Swal.fire({
                            icon: 'success',
                            title: 'Password Reset Successful',
                            text: data.message
                        }).then(() => {
                            // Redirect to the login page
                            window.location.href = '/login';
                        });
                    } else {
                        // Password reset failed, show error Swal alert
                        Swal.fire({
                            icon: 'error',
                            title: 'Password Reset Failed',
                            text: data.message || 'Password reset failed. Please try again.'
                        });
                    }
                } catch (error) {
                    // An error occurred, show error Swal alert
                    Swal.fire({
                        icon: 'error',
                        title: 'Error',
                        text: 'An error occurred while resetting the password. Please try again later.'
                    });
                }
            };


        });



    </script>



    </body>

    </html>


    <%- include('../layouts/user/footer.ejs') %>